rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own profile, and update their own profile.
    // Any authenticated user can read public farmer profiles.
    // New users can create their own user document.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(userId)).data.role == 'farmer');
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow list: if request.auth != null;
    }

    // Crops are publicly readable.
    // Only the farmer who owns the crop can create, update or delete it.
    match /crops/{cropId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.resource.data.farmerId == request.auth.uid;
    }

    // Orders can be created by the buyer.
    // Orders can be read by the buyer who placed it or a farmer included in the order.
    // Orders can be updated by a farmer in the order (to change status).
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.buyer.id == request.auth.uid;
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.buyer.id || request.auth.uid in resource.data.farmerIds);
    }
  }
}
